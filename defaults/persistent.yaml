# Ensure this remains the same as the deployment's name.
name: example-deployment

# Which node in the cluster this persistent deployment will "live" on. Do not change this value without first
# moving the deployment's files to the new node.
dedicatedNode: worker

queuing:
  # Whether or not this server should be used for initial connections. (AKA Lobby Servers)
  initialServer: 'true'

  # Whether or not this deployment needs to tell BMC when it is in a queueable state.
  #
  # If enabled, you are responsible for setting each instance's state to RUNNING using BMC API to allow queuing.
  # If disabled, each instance will be instantly queueable, potentially before it has finished booting.
  # It is recommended you enable this if you have the capability/knowledge to run your own code on each instance.
  requireStartupConfirmation: 'false'


scaling:
  # The maximum number of players on this server
  maxPlayers: 10


server:
  # Change this if you need to use a different java version.
  image: openjdk:21-jdk-slim

  # This is the name of your jarfile located in the base deployment directory.
  jarName: server.jar

  # Include any JVM options.
  jvmOpts: ""

  # Include any JVM args.
  args: "nogui"

  # Do not change this unless you know what you're doing. All internal servers should be able to run on the same port.
  port: 25565

  # Optional ENV variables. These example ones have no real effect and are just for demonstration.
  env:
    - name: EULA
      value: "TRUE"
    - name: VERSION
      value: "1.20.2"

  # The redis endpoint used to relay power actions internally.
  redis:
    host: redis-service
    port: 6379


volume:
  # The directory to pull the server's data from. By default this is set to the folder that is automatically created for the deployment.
  dataDirectory: temp

  # Where the contents of the aformentioned data directory is copied to internally. There is no real reason to change this.
  mountPath: /minecraft


# Set recource limits per instance. "Mi" refers to megabytes, and "m" refers to micro-cpus.
resources:
  requests:
    memory: 256Mi
    cpu: 250m
  limits:
    memory: 516Mi
    cpu: 500m