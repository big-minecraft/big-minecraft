apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
    cadvisor: "true"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: {{ .Values.scaling.minInstances }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        cadvisor: "true"
        kyriji.dev/enable-server-discovery: "true"
        kyriji.dev/enable-panel-discovery: "true"
        kyriji.dev/deployment-type: "non-persistent"

        kyriji.dev/initial-server: "{{ .Values.queuing.initialServer }}"
        kyriji.dev/queue-strategy: "{{ .Values.queuing.queueStrategy }}"
        kyriji.dev/require-startup-confirmation: "{{ .Values.queuing.requireStartupConfirmation }}"

        kyriji.dev/scale-strategy: "{{ .Values.scaling.scaleStrategy }}"
        kyriji.dev/max-players: "{{ .Values.scaling.maxPlayers }}"
        kyriji.dev/min-instances: "{{ .Values.scaling.minInstances }}"
        kyriji.dev/max-instances: "{{ .Values.scaling.maxInstances }}"
        kyriji.dev/scale-up-threshold: "{{ .Values.scaling.scaleUpThreshold }}"
        kyriji.dev/scale-down-threshold: "{{ .Values.scaling.scaleDownThreshold }}"
        kyriji.dev/scale-up-cooldown: "{{ .Values.scaling.scaleUpCooldown }}"
        kyriji.dev/scale-down-cooldown: "{{ .Values.scaling.scaleDownCooldown }}"
        kyriji.dev/scale-up-limit: "{{ .Values.scaling.scaleUpLimit }}"
        kyriji.dev/scale-down-limit: "{{ .Values.scaling.scaleDownLimit }}"

    spec:
      terminationGracePeriodSeconds: 2
      containers:
      - name: mc
        image: {{ .Values.server.image }}
        command: ["/bin/bash", "-c"]
        args:
          - |
            cd {{ .Values.volume.mountPath }}
            if [ ! -f "./{{ .Values.server.jarName }}" ]; then
              echo "Jar file not found! Check your deployment configuration file."
              ls -la ./
              exit 1
            fi
            mkfifo /tmp/server_input
            tail -f /tmp/server_input | java {{ .Values.server.jvmOpts | default "" }} -jar ./{{ .Values.server.jarName }} {{ .Values.server.args | default "nogui" }}
        volumeMounts:
          - name: local-volume
            mountPath: {{ .Values.volume.mountPath | default "/minecraft" }}
        ports:
        - containerPort: {{ .Values.server.port | default 25565 }}
          name: minecraft
        env:
        {{- range .Values.server.env }}
        - name: {{ .name }}
          value: {{ .value | quote }}
        {{- end }}
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}

      - name: cadvisor
        image: gcr.io/cadvisor/cadvisor:v0.47.0
        ports:
        - containerPort: 8080
          name: cadvisor
        labels:
          app: cadvisor
        volumeMounts:
          - name: docker-sock
            mountPath: /var/run/docker.sock
          - name: rootfs
            mountPath: /rootfs
          - name: proc
            mountPath: /proc
          - name: sys
            mountPath: /sys
          - name: local-volume
            mountPath: /mnt/local/deployments/{{ .Values.volume.dataDirectory }}

      volumes:
      - name: local-volume
        hostPath:
          path: /mnt/local/deployments/{{ .Values.volume.dataDirectory }}
          type: Directory
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
      - name: rootfs
        hostPath:
          path: /
      - name: proc
        hostPath:
          path: /proc
      - name: sys
        hostPath:
          path: /sys
