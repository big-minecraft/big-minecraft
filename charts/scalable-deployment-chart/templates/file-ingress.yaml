{{- if .Values.fileServer.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: files-{{ .Values.name }}
  labels:
    app: {{ .Values.name }}
    component: file-server
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    kyriji.dev/deployment-type: "scalable"
    kyriji.dev/component: "file-server"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    {{- if .Values.fileServer.maxFileSize }}
    nginx.ingress.kubernetes.io/proxy-body-size: {{ .Values.fileServer.maxFileSize }}
    {{- end }}
    # Use consistent hashing based on pod parameter to route to specific pods
    nginx.ingress.kubernetes.io/upstream-hash-by: "$arg_pod"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      {{- if .Values.fileServer.cacheControl }}
      add_header Cache-Control "{{ .Values.fileServer.cacheControl }}";
      {{- end }}
      # Extract pod parameter and validate it
      if ($arg_pod = "") {
        return 400 "Pod parameter required. Use ?pod=<pod-name>";
      }
spec:
  tls:
  - hosts:
    - {{ .Values.global.filesDomain }}
    secretName: files-{{ .Values.name }}-tls
  rules:
  - host: {{ .Values.global.filesDomain }}
    http:
      paths:
      - path: /{{ .Values.name }}
        pathType: Prefix
        backend:
          service:
            name: files-{{ .Values.name }}-headless
            port:
              number: {{ .Values.fileServer.port | default 8080 }}
{{- end }}