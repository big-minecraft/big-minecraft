apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nfs-server
  labels:
    app: nfs-server
spec:
  selector:
    matchLabels:
      app: nfs-server
  template:
    metadata:
      labels:
        app: nfs-server
    spec:
      serviceAccountName: kubectl-sa
      containers:
      - name: nfs-server
        image: itsthenetwork/nfs-server-alpine
        securityContext:
          privileged: true
          capabilities:
            add:
              - SYS_ADMIN
        ports:
          - containerPort: 2049
        volumeMounts:
          - name: nfs-volume
            mountPath: /nfsshare
            mountPropagation: Bidirectional
        env:
          - name: SHARED_DIRECTORY
            value: "/nfsshare"
          - name: NFS_VERSION
            value: "4"
          - name: PERMITTED_HOSTS
            value: "*"
      initContainers:
      - name: setup-acl
        image: alpine:latest
        securityContext:
          privileged: true
        command:
          - sh
          - -c
          - |
            apk add --no-cache acl
            setfacl -R -m u::rwx,g::rwx,o::rwx /nfsshare
            setfacl -R -d -m u::rwx,g::rwx,o::rwx /nfsshare
        volumeMounts:
          - name: nfs-volume
            mountPath: /nfsshare
      - name: label-master
        image: alpine:latest
        command:
          - sh
          - -c
          - |
            apk add --no-cache bash kubectl
            NODE_NAME=$(kubectl get pod "$POD_NAME" -o jsonpath='{.spec.nodeName}')
            
            if [[ $(kubectl get node "$NODE_NAME" -o jsonpath='{.metadata.labels.node-role\.kubernetes\.io/master}') == "true" ]]; then
              kubectl label pod "$POD_NAME" master-nfs=true --overwrite
            fi
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
      volumes:
      - name: nfs-volume
        hostPath:
          path: /mnt/nfsshare
          type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: nfs-service
spec:
  selector:
    app: nfs-server
    master-nfs: "true"
  ports:
    - name: nfs
      port: 2049
      targetPort: 2049
      {{- if eq .Values.global.environment "development" }}
      nodePort: 30000
      {{- end }}
  type: {{ ternary "NodePort" "ClusterIP" (eq .Values.global.environment "development") }}