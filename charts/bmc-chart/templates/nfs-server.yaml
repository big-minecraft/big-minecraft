apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nfs-server
  labels:
    app: nfs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs
  template:
    metadata:
      labels:
        app: nfs
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: "true"
      tolerations:
      - key: node-role.kubernetes.io/control-plane
        operator: Exists
        effect: NoSchedule
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      containers:
      - name: nfs-server
        image: itsthenetwork/nfs-server-alpine
        securityContext:
          privileged: true
        ports:
          - containerPort: 2049
        volumeMounts:
          - name: nfs-volume
            mountPath: /nfsshare
        env:
          - name: SHARED_DIRECTORY
            value: "/nfsshare"
          - name: NFS_VERSION
            value: "4"
      volumes:
      - name: nfs-volume
        hostPath:
          path: /mnt/nfsshare
          type: DirectoryOrCreate
---
apiVersion: v1
kind: Service
metadata:
  name: nfs-service
spec:
  selector:
    app: nfs
  ports:
    - name: nfs
      port: 2049
      targetPort: 2049
      nodePort: 30000
  type: NodePort
