apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: {{ .Values.minimumInstances }}
  selector:
    matchLabels:
      app: {{ .Values.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        kyriji.dev/enable-server-discovery: "true"
        kyriji.dev/enable-panel-discovery: "true"
        kyriji.dev/initial-server: "{{ .Values.initialServer }}"
    spec:
      terminationGracePeriodSeconds: 2
      containers:
      - name: mc
        image: {{ .Values.server.image }}
        command: ["/bin/bash", "-c"]
        args:
          - |
            cd {{ .Values.volume.mountPath }}
            if [ ! -f "./{{ .Values.server.jarName }}" ]; then
              echo "server.jar not found!"
              ls -la ./
              exit 1
            fi
            mkfifo /tmp/server_input
            tail -f /tmp/server_input | java {{ .Values.server.jvmOpts | default "" }} -jar ./{{ .Values.server.jarName }} {{ .Values.server.args | default "nogui" }}
        volumeMounts:
          - name: local-volume
            mountPath: {{ .Values.volume.mountPath | default "/minecraft" }}
        ports:
        - containerPort: {{ .Values.server.port | default 25565 }}
          name: minecraft
        env:
        {{- range .Values.server.env }}
        - name: {{ .name }}
          value: {{ .value | quote }}
        {{- end }}
        resources:
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
          limits:
            memory: {{ .Values.resources.limits.memory }}
            cpu: {{ .Values.resources.limits.cpu }}
      volumes:
      - name: local-volume
        hostPath:
          path: /mnt/local/gamemodes/{{ .Values.volume.dataDirectory }}
          type: Directory