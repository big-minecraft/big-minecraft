apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-sftp-server
  labels:
    app: nfs-sftp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-sftp
  template:
    metadata:
      labels:
        app: nfs-sftp
    spec:
      initContainers:
      - name: init-sftp-setup
        image: alpine
        command: ["/bin/sh", "-c"]
        args:
          - |
            echo "Setting up SFTP directory..."
            mkdir -p /home/user/nfsshare;  # Create the directory if it doesn't exist
            chown 1001:1001 /home/user/nfsshare;  # Set ownership to the SFTP user
            chmod 755 /home/user/nfsshare;  # Set directory permissions
            echo "SFTP directory setup complete."
        volumeMounts:
          - name: nfs-volume
            mountPath: /home/user/nfsshare  # This is the mount path for the SFTP user's home
      containers:
      - name: nfs-server
        image: itsthenetwork/nfs-server-alpine
        securityContext:
          privileged: true
        ports:
          - containerPort: 2049 # NFS
        volumeMounts:
          - name: nfs-volume
            mountPath: /nfsshare  # NFS shared directory
        env:
          - name: SHARED_DIRECTORY
            value: "/nfsshare"
          - name: NFS_VERSION
            value: "4"
      - name: sftp-server
        image: atmoz/sftp
        ports:
          - containerPort: 22    # SFTP
        env:
          - name: SFTP_USERS
            value: "user:password:1001:1001"  # username:password:uid:gid
        volumeMounts:
          - name: nfs-volume
            mountPath: /home/user/nfsshare  # Mount shared NFS directory to user's home
      - name: file-monitor
        image: alpine
        command: ["/bin/sh", "-c"]
        args:
          - |
            apk add --no-cache inotify-tools redis;  # Install inotify-tools and redis-cli
            SFTP_DIR="/home/user/nfsshare";
            REDIS_HOST="redis-service";  # Change this to your Redis service name
            REDIS_PORT=6379;

            # Debugging print statement for directory monitoring setup
            echo "Monitoring directory: $SFTP_DIR"
            echo "Connecting to Redis at $REDIS_HOST:$REDIS_PORT"

            inotifywait -m -r -e create -e modify -e delete --format '%w%f' "$SFTP_DIR" | while read FILE
            do
              # Debugging print statement to check the file events
              echo "Event detected for file: $FILE"

              if [[ ! -e "$FILE" ]]; then
                  MESSAGE="File deleted: $FILE";
                  echo "$MESSAGE"
              else
                  MESSAGE="File changed: $FILE";
                  echo "$MESSAGE"
              fi

              # Debugging print statement before publishing to Redis
              echo "Publishing message to Redis: $MESSAGE"
              redis-cli -h $REDIS_HOST -p $REDIS_PORT PUBLISH file_changes "$MESSAGE" || echo "Failed to publish message to Redis"
            done
        volumeMounts:
          - name: nfs-volume
            mountPath: /home/user/nfsshare  # Mount shared NFS directory
      volumes:
      - name: nfs-volume
        hostPath:
          path: /mnt/nfsshare  # This is the host path for the shared folder
          type: DirectoryOrCreate  # Create the directory if it does not exist
